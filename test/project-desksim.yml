---

# Notes:
# Sample project C code is not presently written to produce a release artifact.
# As such, release build options are disabled.
# This sample, therefore, only demonstrates running a collection of unit tests.

:project:
  :use_exceptions: TRUE
  :use_mocks: TRUE
  :use_test_preprocessor: TRUE
  :use_deep_dependencies: TRUE
  :generate_deep_dependencies: TRUE
  :build_root: build-desksim
#  :release_build: TRUE
  :test_file_prefix: test_
  :which_ceedling: vendor/ceedling
  :default_tasks:
    - test:all

#:release_build:
#  :output: MyApp.out
#  :use_assembly: FALSE

:environment:

:extension:
  :executable: .elf

:paths:
  :test:
    - +:desksim/**
  :source:
    - src/**
  :support:
  :include:
    - +:/home/phil/Projects/gsl.X
    - +:desksim_includes

:defines:
  # in order to add common defines:
  #  1) remove the trailing [] from the :common: section
  #  2) add entries to the :common: section (e.g. :test: has TEST defined)
  :commmon: &common_defines
    - __DEBUG
    - CEXCEPTION_USE_CONFIG_FILE
    - UNITY_INCLUDE_CONFIG_H

  :test:
    - *common_defines
    - TEST
  :test_preprocess:
    - *common_defines
    - TEST

:cmock:
  :mock_prefix: mock_
  :when_no_prototypes: :warn
  :enforce_strict_ordering: TRUE
  :plugins:
    - :ignore
    - :ignore_arg
    - :callback
    - :return_thru_ptr
  :treat_as:
    uint8:    HEX8
    uint16:   HEX16
    uint32:   UINT32
    int8:     INT8
    bool:     UINT8
    uint8_t*: STRING
  :defines:
    - CMOCK_MEM_SIZE=10000
  :when_ptr: :smart
    
:gcov:
    :html_report_type: detailed
    :compile:
      :*:
        - -Wall
        - -Wextra
        - -Wstrict-prototypes
        - -Werror
        - -fdata-sections
        - -ffunction-sections
    :link:
      :*:
        - -Wl,--gc-sections
        - -lm -lgsl -lgslcblas
    

:flags:
    :test:
        :*:
          - -Wall
        
        
#:tools:
# Ceedling defaults to using gcc for compiling, linking, etc.
# As [:tools] is blank, gcc will be used (so long as it's in your system path)
# See documentation to configure a given toolchain for use
:tools:
  :gcov_linker:
    :executable: gcc
    :arguments:
      - -fprofile-arcs
      - -ftest-coverage
      - ${1}
      - -lm -lgsl -lgslcblas
      - -o ${2}

# LIBRARIES
# These libraries are automatically injected into the build process. Those specified as
# common will be used in all types of builds. Otherwise, libraries can be injected in just
# tests or releases. These options are MERGED with the options in supplemental yaml files.
:libraries:
  :placement: :end
  :flag: "-lm -lgsl -lgslcblas -lzmq"
  :system:
    - m
:plugins:
  :load_paths:
    - vendor/ceedling/plugins
  :enabled:
    - stdout_pretty_tests_report
    - module_generator
    - raw_output_report
    - gcov
...
